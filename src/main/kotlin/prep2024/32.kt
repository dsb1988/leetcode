package prep2024

import kotlin.math.max

fun main() {
    println("Longest Valid Parentheses")
    val s1 = ")()())"
    val s2 = "(()"
    val s3 = "()(()"
    val s4 = ")(())))(())())"
    val s5 = "))()()"
    val s6 = "(())("
    val s7 =
        "())((()()(()(((()())))))))((((((())()(()()(())()))(()))(()()())((((((()())()()()(()))())(((()(()(())(()((()())())))((()(((()(()((()())())))(())))()))))))))))())()))((())()()()()))((()))(((()))()(()))()((()()()(()))(((()()()()((()()(()())))(())))))))()))))()))()((()())())(()))(((()()()((())())())(((())((()))(())(())()))))(())))()())())()(()))))(())))(())))(()((())(())))((()(()))((((()))))()((()()()())()(())(()(()()())()((())(()((()()()())()))((()))))()))())))))))()((()()))()()()()))(()()()()(())()(()))))()(((((()(((((((()(((())()))(()())()(()))(()(()((()((((()))))()(())(()))))()(()(((((((()))((()(()(()))(()())(()())()(())()(()((((()))))()()()(((())()())()))())()(())))(()()))))(())))))((((()))))(((((()))((((()))((())))))((())))())((((((((()(()((())))()))()()))))))))(((()(()())(()))((())((())(()))))))))((())()()())(()(())()))))((())())(()(())((()())))))((())((())())()(()))(())()()()((((()(()()))()(()(((((()())())())))())()))()))(()())()((()()()()((())()())(((())(((()(()()(((((((()(((()((((()(()((())))())())(())()(()())()((())()()()))()(()())()))()())))()()())))()(((((()()))(())(((()())))(())(())())(())(()()())))()())()))(()))))(()())()(()))((((())()())(())(((()())(()((((((((()))((((())())()((()()())())()()()())()()((()())(()()))((()()))()))(((()((()()(()))()(())()())((())())()(((())))(())((()((())(()()()(()(()))((()((((()(()()(())(()()))))(())()(()()))))())()((())(()))()()(()()()((()))(()))))())((()(()(("
    println(longestValidParentheses(s1))
    println(longestValidParentheses(s2))
    println(longestValidParentheses(s3))
    println(longestValidParentheses(s4))
    println(longestValidParentheses(s5))
    println(longestValidParentheses(s6))
    println(longestValidParentheses(s7))
}

fun longestValidParentheses(s: String): Int {
    if (s.isEmpty()) return 0

    var maxLength = 0

    val stack = mutableListOf<Int>()
    stack.add(-1)

    s.forEachIndexed { index, char ->
        if (char == '(') {
            stack.add(index)
        } else {
            stack.removeLast()
            if (stack.isEmpty()) {
                stack.add(index)
            } else {
                maxLength = max(maxLength, index - stack.last())
            }
        }
    }

    return maxLength
}